static void merge(vector<int>&nums,int s,int mid,int e)
    {
        vector<int>v1(nums.begin()+s,nums.begin()+mid+1);
        vector<int>v2(nums.begin()+mid+1,nums.begin()+e+1);
        int i=0,j=0,k=s;
        while(k<=e)
        {
            while(i<=mid && j<=e)
            {
                if(v1[i]<=v2[j])
                {
                    nums[k]=v1[i];
                    i++;
                }
                else if(v1[i]>v2[j])
                {
                    nums[k]=
                    j++;
                }
                k++;
            }
            if(i<=mid)
            {
                nums[k]=v1[i];
                i++;
            }
            if(j<=e)
            {
                nums[k]=v2[j];
                j++;
            }
            k++;
        }
    }
    static void sort(vector<int>&nums,int s,int e)
    {
        if (e - s+1 <= 1) 
            return;
        int mid = s+(e-s)/2;
        sort(nums,s,mid);
        sort(nums,mid+1,e);
        merge(nums,s,mid,e);
    }
